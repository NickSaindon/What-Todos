{"remainingRequest":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/node_modules/babel-loader/lib/index.js!/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/node_modules/eslint-loader/index.js??ref--13-0!/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/src/store/modules/todos.js","dependencies":[{"path":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/src/store/modules/todos.js","mtime":1635537875966},{"path":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/babel.config.js","mtime":1635039650537},{"path":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9OaWNrU2FpbmRvbi9EZXNrdG9wL0FwcHMvUnVieS93aGF0VG9kby9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciBhcGlfdXJsID0gImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvdjEvdG9kb3MiOwp2YXIgc3RhdGUgPSB7CiAgdG9kb3M6IFtdCn07CnZhciBnZXR0ZXJzID0gewogIGFsbFRvZG9zOiBmdW5jdGlvbiBhbGxUb2RvcyhzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnRvZG9zOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZmV0Y2hUb2RvczogZnVuY3Rpb24gZmV0Y2hUb2RvcyhfcmVmKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoYXBpX3VybCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGNvbW1pdCgic2V0VG9kb3MiLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9LAogIGFkZFRvZG86IGZ1bmN0aW9uIGFkZFRvZG8oX3JlZjIsIGNhdGVnb3J5LCB0aXRsZSwgZGVzY3JpcHRpb24sIHNjaGVkdWxlZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoYXBpX3VybCwgewogICAgICAgICAgICAgICAgdG9kbzogewogICAgICAgICAgICAgICAgICBjYXRlZ29yeTogY2F0ZWdvcnksCiAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICBzY2hlZHVsZWQ6IHNjaGVkdWxlZCwKICAgICAgICAgICAgICAgICAgY29tcGxldGVkOiBmYWxzZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCJuZXdUb2RvIiwgcmVzcG9uc2UuZGF0YSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSkoKTsKICB9LAogIGRlbGV0ZVRvZG86IGZ1bmN0aW9uIGRlbGV0ZVRvZG8oX3JlZjMsIGlkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5kZWxldGUoYXBpX3VybCArICIvIi5jb25jYXQoaWQpKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb21taXQoInJlbW92ZVRvZG8iLCBpZCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMyk7CiAgICB9KSkoKTsKICB9LAogIHVwZGF0ZVRvZG86IGZ1bmN0aW9uIHVwZGF0ZVRvZG8oX3JlZjQsIHVwZGF0ZWRUb2RvKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucHV0KGFwaV91cmwgKyAiLyIuY29uY2F0KHVwZGF0ZWRUb2RvLmlkKSwgdXBkYXRlZFRvZG8pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgY29tbWl0KCJzZXRVcGRhdGVkVG9kbyIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTQpOwogICAgfSkpKCk7CiAgfQp9Owp2YXIgbXV0YXRpb25zID0gewogIHNldFRvZG9zOiBmdW5jdGlvbiBzZXRUb2RvcyhzdGF0ZSwgdG9kb3MpIHsKICAgIHJldHVybiBzdGF0ZS50b2RvcyA9IHRvZG9zOwogIH0sCiAgbmV3VG9kbzogZnVuY3Rpb24gbmV3VG9kbyhzdGF0ZSwgdG9kbykgewogICAgcmV0dXJuIHN0YXRlLnRvZG9zLnVuc2hpZnQodG9kbyk7CiAgfSwKICByZW1vdmVUb2RvOiBmdW5jdGlvbiByZW1vdmVUb2RvKHN0YXRlLCBpZCkgewogICAgcmV0dXJuIHN0YXRlLnRvZG9zID0gc3RhdGUudG9kb3MuZmlsdGVyKGZ1bmN0aW9uICh0b2RvKSB7CiAgICAgIHJldHVybiB0b2RvLmlkICE9PSBpZDsKICAgIH0pOwogIH0sCiAgc2V0VXBkYXRlZFRvZG86IGZ1bmN0aW9uIHNldFVwZGF0ZWRUb2RvKHN0YXRlLCB1cGRhdGVkVG9kbykgewogICAgdmFyIGluZGV4ID0gc3RhdGUudG9kb3MuZmluZEluZGV4KGZ1bmN0aW9uICh0b2RvKSB7CiAgICAgIHJldHVybiB0b2RvLmlkID09PSB1cGRhdGVkVG9kby5pZDsKICAgIH0pOwoKICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgc3RhdGUudG9kb3Muc3BsaWNlKGluZGV4LCAxLCB1cGRhdGVkVG9kbyk7CiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIGdldHRlcnM6IGdldHRlcnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBtdXRhdGlvbnM6IG11dGF0aW9ucwp9Ow=="},{"version":3,"sources":["/Users/NickSaindon/Desktop/Apps/Ruby/whatTodo/frontend/src/store/modules/todos.js"],"names":["axios","api_url","state","todos","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","category","title","description","scheduled","post","todo","completed","deleteTodo","id","delete","updateTodo","updatedTodo","put","mutations","setTodos","newTodo","unshift","removeTodo","filter","setUpdatedTodo","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst api_url = \"http://localhost:3000/api/v1/todos\";\n\nconst state = { todos: [] };\n\nconst getters = {\n  allTodos: (state) => state.todos,\n};\n\nconst actions = {\n  async fetchTodos({ commit }) {\n    const response = await axios.get(api_url);\n\n    commit(\"setTodos\", response.data);\n  },\n  async addTodo({ commit }, category, title, description, scheduled) {\n    const response = await axios.post(api_url, {\n      todo: {\n        category,\n        title,\n        description,\n        scheduled,\n        completed: false,\n      },\n    });\n    commit(\"newTodo\", response.data);\n  },\n  async deleteTodo({ commit }, id) {\n    await axios.delete(api_url + `/${id}`);\n\n    commit(\"removeTodo\", id);\n  },\n  async updateTodo({ commit }, updatedTodo) {\n    const response = await axios.put(\n      api_url + `/${updatedTodo.id}`,\n      updatedTodo\n    );\n\n    commit(\"setUpdatedTodo\", response.data);\n  },\n};\n\nconst mutations = {\n  setTodos: (state, todos) => (state.todos = todos),\n  newTodo: (state, todo) => state.todos.unshift(todo),\n  removeTodo: (state, id) =>\n    (state.todos = state.todos.filter((todo) => todo.id !== id)),\n  setUpdatedTodo: (state, updatedTodo) => {\n    const index = state.todos.findIndex((todo) => todo.id === updatedTodo.id);\n\n    if (index !== -1) {\n      state.todos.splice(index, 1, updatedTodo);\n    }\n  },\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}